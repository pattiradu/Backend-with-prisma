generator client {
  provider = "prisma-client-js"
  output   = "../generated/hypertension_system"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Roles Table
model tbl_roles {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  role_name String @unique

  users     tbl_user[]
  tbl_users tbl_users[]
}

// General Users Table
model tbl_users {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  names    String
  email    String    @unique
  password String
  role_id  String    @db.ObjectId
  role     tbl_roles @relation(fields: [role_id], references: [id], onDelete: Cascade)
}

// System/Admin Users Table
model tbl_user {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  u_names     String
  u_phone     String
  u_usersname String @unique
  u_email     String @unique
  u_password  String
  u_role_id   String @db.ObjectId

  role tbl_roles? @relation(fields: [u_role_id], references: [id], onDelete: Cascade)
}

// Doctors Table
model tbl_doctors {
  id             String                    @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  specialization String
  appointments   tbl_appointments[]
  solved         tbl_solved_appointments[]
}

// Appointments Table
model tbl_appointments {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  doctor_id        String   @db.ObjectId
  patient_name     String
  appointment_date DateTime
  status           String
  created_at       DateTime @default(now())

  doctor              tbl_doctors?              @relation(fields: [doctor_id], references: [id], onDelete: Cascade)
  solved_appointments tbl_solved_appointments[]
}

// Solved Appointments Table
model tbl_solved_appointments {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  appointment_id   String   @db.ObjectId
  doctor_id        String   @db.ObjectId
  patient_name     String
  appointment_date DateTime
  status           String
  solved_at        DateTime @default(now())

  appointment tbl_appointments? @relation(fields: [appointment_id], references: [id], onDelete: Cascade)
  doctor      tbl_doctors?      @relation(fields: [doctor_id], references: [id], onDelete: Cascade)
}

// Heart Monitoring Data Table
model tbl_heart_data {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  patient_name String
  heartbeat    Int?
  status       String?
  nid          String?
  ages         Int?
  patient_code String   @unique
  recorded_at  DateTime @default(now())
}
